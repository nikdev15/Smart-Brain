{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\lenovo pc\\\\desktop\\\\robofriends\\\\src\\\\App.js\";\nimport React, { Component } from 'react';\nimport tsParticles from 'tsparticles';\nimport Navigation from './components/navigation/Navigation';\nimport SignIn from './components/SignIn/SignIn';\nimport Register from './components/Register/Register';\nimport Logo from './components/logo/Logo';\nimport FaceRecognition from './components/facerecognition/FaceRecognition';\nimport Clarifai from 'clarifai';\nimport ImageLinkForm from './components/imagelinkform/ImageLinkForm';\nimport Rank from './components/Rank/Rank';\nimport './App.css';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst initialState = {\n  input: '',\n  imageUrl: '',\n  box: {},\n  route: 'signout',\n  isSignedIn: false,\n  user: {\n    id: '',\n    name: '',\n    email: '',\n    entries: 0,\n    joined: ''\n  }\n};\nconst particlesOptions = {\n  particles: {\n    number: {\n      value: 30,\n      density: {\n        enable: true,\n        value_area: 800\n      }\n    }\n  }\n};\n\nclass App extends Component {\n  constructor() {\n    super();\n\n    this.loadUser = data => {\n      this.setState({\n        user: {\n          id: data.id,\n          name: data.name,\n          email: data.email,\n          entries: data.entries,\n          joined: data.joined\n        }\n      });\n    };\n\n    this.calculateFaceLocation = data => {\n      const clarifaiFace = data.outputs[0].data.regions[0].region_info.bounding_box;\n      const image = document.getElementById('inputimage');\n      const width = Number(image.width);\n      const height = Number(image.height);\n      return {\n        leftCol: clarifaiFace.left_col * width,\n        topRow: clarifaiFace.top_row * height,\n        rightCol: width - clarifaiFace.right_col * width,\n        bottomRow: height - clarifaiFace.bottom_row * height\n      };\n    };\n\n    this.displayFaceBox = box => {\n      this.setState({\n        box: box\n      });\n    };\n\n    this.onInputChange = event => {\n      this.setState({\n        input: event.target.value\n      });\n    };\n\n    this.tsParticles = () => {\n      loadJSON(\"tsparticles\", \"presets/default.json\").then(container => {\n        console.log(\"callback - tsparticles config loaded\");\n      }).catch(error => {\n        console.error(error);\n      });\n    };\n\n    this.onButtonSubmit = () => {\n      this.setState({\n        imageUrl: this.state.input\n      });\n      fetch('http://localhost:3001/imageurl', {\n        method: 'post',\n        headers: {\n          'Content-Type': 'application/json'\n        },\n        body: JSON.stringify({\n          input: this.state.input\n        })\n      }).then(response => response.json()).then(response => {\n        if (response) {\n          fetch('http://localhost:3001/image', {\n            method: 'put',\n            headers: {\n              'Content-Type': 'application/json'\n            },\n            body: JSON.stringify({\n              id: this.state.user.id\n            })\n          }).then(response => response.json()).then(count => {\n            this.setState(Object.assign(this.state.user, {\n              entries: count\n            }));\n          }).catch(console.log);\n        }\n\n        this.displayFaceBox(this.calculateFaceLocation(response));\n      }).catch(err => console.log(err));\n    };\n\n    this.onRouteChange = route => {\n      if (route === 'signout') {\n        this.setState(initialState);\n      } else if (route === 'home') {\n        this.setState({\n          isSignedIn: true\n        });\n      }\n\n      this.setState({\n        route: route\n      });\n    };\n\n    this.state = initialState;\n  }\n\n  render() {\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"App\",\n      children: [/*#__PURE__*/_jsxDEV(Particles, {\n        className: \"particles\",\n        tsparticles: this.tsParticles\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 129,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(Navigation, {\n        isSignedIn: this.state.isSignedIn,\n        onRouteChange: this.onRouteChange\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 130,\n        columnNumber: 9\n      }, this), this.state.route === 'home' ? /*#__PURE__*/_jsxDEV(\"div\", {\n        children: [/*#__PURE__*/_jsxDEV(Logo, {}, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 133,\n          columnNumber: 15\n        }, this), /*#__PURE__*/_jsxDEV(Rank, {\n          name: this.state.user.name,\n          entries: this.state.user.entries\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 134,\n          columnNumber: 15\n        }, this), /*#__PURE__*/_jsxDEV(ImageLinkForm, {\n          onInputChange: this.onInputChange,\n          onButtonSubmit: this.onButtonSubmit\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 135,\n          columnNumber: 15\n        }, this), /*#__PURE__*/_jsxDEV(FaceRecognition, {\n          box: this.state.box,\n          imageUrl: this.state.imageUrl\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 139,\n          columnNumber: 15\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 132,\n        columnNumber: 13\n      }, this) : this.state.route === 'signin' ? /*#__PURE__*/_jsxDEV(SignIn, {\n        loadUser: this.loadUser,\n        onRouteChange: this.onRouteChange\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 143,\n        columnNumber: 17\n      }, this) : /*#__PURE__*/_jsxDEV(Register, {\n        loadUser: this.loadUser,\n        onRouteChange: this.onRouteChange\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 144,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 128,\n      columnNumber: 7\n    }, this);\n  }\n\n}\n\nexport default App;","map":{"version":3,"sources":["C:/Users/lenovo pc/desktop/robofriends/src/App.js"],"names":["React","Component","tsParticles","Navigation","SignIn","Register","Logo","FaceRecognition","Clarifai","ImageLinkForm","Rank","initialState","input","imageUrl","box","route","isSignedIn","user","id","name","email","entries","joined","particlesOptions","particles","number","value","density","enable","value_area","App","constructor","loadUser","data","setState","calculateFaceLocation","clarifaiFace","outputs","regions","region_info","bounding_box","image","document","getElementById","width","Number","height","leftCol","left_col","topRow","top_row","rightCol","right_col","bottomRow","bottom_row","displayFaceBox","onInputChange","event","target","loadJSON","then","container","console","log","catch","error","onButtonSubmit","state","fetch","method","headers","body","JSON","stringify","response","json","count","Object","assign","err","onRouteChange","render"],"mappings":"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","sourcesContent":["import React, { Component } from 'react';\nimport tsParticles from 'tsparticles';\nimport Navigation from './components/navigation/Navigation';\nimport SignIn from './components/SignIn/SignIn';\nimport Register from './components/Register/Register';\nimport Logo from './components/logo/Logo';\nimport FaceRecognition from './components/facerecognition/FaceRecognition';\nimport Clarifai from 'clarifai';\nimport ImageLinkForm from './components/imagelinkform/ImageLinkForm';\nimport Rank from './components/Rank/Rank';\nimport './App.css';\n\n\nconst initialState = {\n  input: '',\n  imageUrl: '',\n  box: {},\n  route: 'signout',\n  isSignedIn : false,\n  user: {\n      id: '',\n       name: '',\n      email: '',\n      entries: 0,\n      joined: ''\n    }\n}\nconst particlesOptions ={\n  particles: {\n    number: {\n      value: 30,\n      density: {\n        enable: true,\n        value_area: 800\n\n      }\n    }\n  }\n}\n\nclass App extends Component {\n  constructor() {\n    super();\n    this.state = initialState\n  }\n\n  loadUser =(data) => {\n    this.setState({user: {\n        id: data.id,\n        name: data.name,\n        email: data.email,\n        entries: data.entries,\n        joined: data.joined\n    }})\n  }\n\n  calculateFaceLocation = (data) => {\n    const clarifaiFace = data.outputs[0].data.regions[0].region_info.bounding_box;\n    const image = document.getElementById('inputimage');\n    const width = Number(image.width);\n    const height =Number(image.height);\n    return{\n      leftCol : clarifaiFace.left_col * width,\n      topRow : clarifaiFace.top_row * height,\n      rightCol : width - (clarifaiFace.right_col * width),\n      bottomRow : height -(clarifaiFace.bottom_row * height)\n    }\n  }\n\n  displayFaceBox =(box) => {\n    this.setState({box: box});\n  }\n\n  onInputChange =(event) => {\n    this.setState({input: event.target.value});\n  }\n\n  tsParticles =() => {\n     loadJSON(\"tsparticles\", \"presets/default.json\")\n    .then((container) => {\n      console.log(\"callback - tsparticles config loaded\");\n    })\n    .catch((error) => {\n      console.error(error);\n    });\n  }\n  onButtonSubmit =() => {\n    this.setState({imageUrl: this.state.input});\n    fetch('http://localhost:3001/imageurl', {\n          method: 'post',\n          headers: {'Content-Type': 'application/json'},\n          body: JSON.stringify({\n            input: this.state.input\n          })\n        })\n    .then(response => response.json())\n    .then(response => { \n      if(response) {\n        fetch('http://localhost:3001/image', {\n          method: 'put',\n          headers: {'Content-Type': 'application/json'},\n          body: JSON.stringify({\n            id: this.state.user.id\n          })\n        })\n        .then(response => response.json())\n        .then(count => {\n          this.setState(Object.assign(this.state.user, { entries: count}))\n        })\n        .catch(console.log)\n      }\n      this.displayFaceBox(this.calculateFaceLocation(response))\n    })\n    .catch(err => console.log(err));\n  }\n\n  onRouteChange = (route) => {\n    if (route === 'signout'){\n      this.setState(initialState)\n    } else if(route === 'home') {\n      this.setState({ isSignedIn: true })\n    }\n    this.setState({route: route});\n  }\n\n  render(){\n    return (\n      <div className=\"App\">\n        <Particles className = 'particles' tsparticles={this.tsParticles}  />\n        <Navigation isSignedIn={this.state.isSignedIn} onRouteChange={this.onRouteChange} />\n        { this.state.route === 'home'\n          ? <div> \n              <Logo />\n              <Rank name={this.state.user.name} entries={this.state.user.entries}/>\n              <ImageLinkForm \n                onInputChange={this.onInputChange} \n                onButtonSubmit={this.onButtonSubmit}\n              />\n              <FaceRecognition box={this.state.box} imageUrl={this.state.imageUrl}/>\n            </div>\n          : (\n              this.state.route === 'signin' \n              ? <SignIn loadUser={this.loadUser} onRouteChange={this.onRouteChange} />\n              : <Register loadUser={this.loadUser} onRouteChange={this.onRouteChange} />\n            )\n\n          \n        }\n      </div>\n    );\n  }\n}\n\nexport default App;\n"]},"metadata":{},"sourceType":"module"}